# Import image optimizers
from .optimizeimages import pngnq, optipng, jpegoptim

#setup environment values
outputdir = "/home/prozach/mcmaps/map/"
showspawn = "True"
showlocationmarker = "False"
bgcolor = "#000000"
poititle = "Points of Interest"

#Import Observer Code
from .observer import MultiplexingObserver, LoggingObserver, JSObserver, ProgressBarObserver, RConObserver

#Logging Observer
#logO = LoggingObserver()

#Webpage Map Progress
#messages = 'dict(totalTiles = "Rendering %d Tiles", renderCompleted = "Last Render completed in %02d:%02d:%02d",renderProgress = "Rendered %d of %d tiles (%d%% ETA:%s)")'
#messages = "("totalTiles":"Rendering %d Tiles", "renderCompleted":"Last Render completed in %02d:%02d:%02d","renderProgress":"Rendered %d of %d tiles")"
#dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
#jsO = JSObserver(outputdir,30)

#terminal output observer
#pbO = ProgressBarObserver()

#RCON Observer Config
serverip = "127.0.0.1"
password = "minecraft"
port = 25575
#rcO = RConObserver("127.0.0.1","minecraft")
#rcO = RConObserver(serverip,password,port)

#set up the multiplexed observer
#observer = MultiplexingObserver(logO,jsO,pbO,rcO)

#Define Worlds to be Mapped
worlds["Bees"] = "/home/prozach/minecraft/world"

#POI Generation
#Generate Player Locations
def playerIcons(poi):
    if poi['id'] == 'Player':
        poi['icon'] = "https://overviewer.org/avatar/%s" % poi['EntityId']
        return "Last known location for %s" % poi['EntityId']

#Generate Player Spawn Locations
def playerSpawns(poi):
   if poi['id'] == 'PlayerSpawn':
       return "This is where %s sleeps" % poi['EntityId']

#Generate Chest Locations
def chestFilter(poi):
    if poi['id'] == 'Chest' or poi['id'] == 'minecraft:chest':
        return "Chest with %d items" % len(poi.get('Items', []))

#Generate Sign Locations and Content
def signFilter(poi):
    if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
        return "\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']])

#Map Renders
#Daytime Overworld Map North Upper Left
renders["Bees_Day"] = {
    "world": "Bees",
    "title": "Day North Upper Left",
    "rendermode": smooth_lighting,
    "dimension": "overworld",
    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)],
    "markers": [dict(name="Signs", filterFunction=signFilter),
                dict(name="Players", filterFunction=playerIcons),
                dict(name="PlayerSpawns", filterFunction=playerSpawns, icon="bed.png"),
                dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
}
#
##Daytime Overworld Map North Upper Right
#renders["Bees_Day_NUR"] = {
#    "world": "Bees",
#    "title": "Day North Upper Right",
#    "rendermode": smooth_lighting,
#    "dimension": "overworld",
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)],
#    "northdirection": "upper-right",
#    "markers": [dict(name="Signs", filterFunction=signFilter),
#                dict(name="Players", filterFunction=playerIcons),
#                dict(name="PlayerSpawns", filterFunction=playerSpawns, icon="bed.png"),
#                dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
#}
#
##Daytime Overworld Map North Lower Right
#renders["Bees_Day_NLR"] = {
#    "world": "Bees",
#    "title": "Day North Lower Right",
#    "rendermode": smooth_lighting,
#    "dimension": "overworld",
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)],
#    "northdirection": "lower-right",
#    "markers": [dict(name="Signs", filterFunction=signFilter),
#                dict(name="Players", filterFunction=playerIcons),
#                dict(name="PlayerSpawns", filterFunction=playerSpawns, icon="bed.png"),
#                dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
#}
#
##Daytime Overworld Map North Lower Left
#renders["Bees_Day_NLL"] = {
#    "world": "Bees",
#    "title": "Day North Lower Left",
#    "rendermode": smooth_lighting,
#    "dimension": "overworld",
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)],
#    "northdirection": "lower-left",
#    "markers": [dict(name="Signs", filterFunction=signFilter),
#                dict(name="Players", filterFunction=playerIcons),
#                dict(name="PlayerSpawns", filterFunction=playerSpawns, icon="bed.png"),
#                dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
#}
#
##Nighttime Overworld Map
#renders["Bees_Night"] = {
#    "world": "Bees",
#    "title": "Night",
#    "rendermode": smooth_night,
#    "dimension": "overworld",
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)],
#    "markers": [dict(name="Signs", filterFunction=signFilter),
#                dict(name="Players", filterFunction=playerIcons),
#                dict(name="PlayerSpawns", filterFunction=playerSpawns, icon="bed.png"),
#                dict(name="Chests", filterFunction=chestFilter, icon="chest_sm.png", createInfoWindow=False)]
#}
#
##Cave Render
#renders["Bees_Caves"] = {
#    "world": "Bees",
#    "title": "Caves",
#    "rendermode": [Base(), Cave(), EdgeLines()],
#    "dimension": "overworld",
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Nether Render
#renders["Bees_Nether"] = {
#    "world": "Bees",
#    "title": "Nether",
#    "rendermode": nether_smooth_lighting,
#    "dimension": "nether",
#    "optimizeimg":[pngnq(sampling=1), optipng(olevel=3)]
#}
#
##End Render
#
##Overlays
##Overworld Biome Overlay
#renders['Bees_Biomeover'] = {
#    'world': 'Bees',
#    'rendermode': [ClearBase(), BiomeOverlay()],
#    'title': "Biomes",
#    "dimension": "overworld",
#    'overlay': ['Bees_Day'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Overworld Mineral Overlay on caves and day
#renders['Bees_Overworld_Mineralover'] = {
#    'world': 'Bees',
#    'rendermode': [ClearBase(), MineralOverlay()],
#    'title': "Overworld Minerals",
#    "dimension": "overworld",
#    'overlay': ['Bees_Day', 'Bees_Caves'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Overworld SlimeBlock Overlay on caves and day
#renders['Bees_Overworld_Slimeover'] = {
#    'world': 'Bees',
#    'rendermode': [ClearBase(), SlimeOverlay()],
#    'title': "Overworld Slime Blocks",
#    "dimension": "overworld",
#    'overlay': ['Bees_Day', 'Bees_Caves'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Cave Mineral Overlay
#renders['Bees_Cave_Mineralover'] = {
#    'world': 'Bees',
#    'rendermode': [ClearBase(), Cave(), MineralOverlay()],
#    'title': "Cave Minerals",
#    "dimension": "overworld",
#    'overlay': ['Bees_Caves'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Cave Slimeblock Overlay
#renders['Bees_Cave_Slimeover'] = {
#    'world': 'Bees',
#    'rendermode': [ClearBase(), Cave(), SlimeOverlay()],
#    'title': "Cave Slime Blocks",
#    "dimension": "overworld",
#    'overlay': ['Bees_Caves'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Cave Depth Overlay
#renders['Bees_Depthover'] = {
#    'world': 'Bees',
#    'rendermode': cave,
#    'title': "Cave Depth Overlay",
#    "dimension": "overworld",
#    'overlay': ['Bees_Caves'],
#    "optimizeimg":[pngnq(sampling=3), optipng(olevel=3)]
#}
#
##Lit Cave Overlay (testing)
#renders["Bees_Lit_Caves"] = {
#    "world": "Bees",
#    "title": "Lit Caves Overlay",
#    "rendermode": [Base(), Cave(only_lit=True), EdgeLines()],
#    "dimension": "overworld",
#    "overlay": ["Bees_Caves"],
#    "imgformat": "jpeg",
#    "optimizeimg":[jpegoptim(quality=80)]
#}
